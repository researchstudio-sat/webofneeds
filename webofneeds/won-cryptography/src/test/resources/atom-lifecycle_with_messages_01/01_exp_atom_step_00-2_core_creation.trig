@prefix con:   <https://w3id.org/won/content#> .
@prefix match:   <https://w3id.org/won/matching#> .
##################################################################
#                   OWNER REQUESTS AN URI FOR THE ATOM
##################################################################

# URL of the document http://www.example.com/resource/atom/100/v1/core

#@prefix :       <http://www.example.com/resource/atom/100/> .
@prefix owner:  <http://www.example.com/resource/owner/> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix geo:    <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix cert    <http://www.w3.org/ns/auth/cert#> .
@prefix tio:    <http://purl.org/tio/ns#> .
@prefix won:    <https://w3id.org/won/core#> .
@prefix crypt:  <https://w3id.org/won/cryptography#> .

@prefix msg:    <https://w3id.org/won/msg#> .
##################################################################
#                     PERMANENT PART
# If this data changes, a new version of the resource MUST be
# created by the WoN node.
##################################################################

# owner-specified content (permanent):

# OA generates a new ID (if the ID already exists the WN refuses the atom creation an the
# OA has to generate a new one)
# or the OA sends a request to the WN to get a new URI

_:message a msg:atomMessage
          msg:creator <http://www.example.com/resource/atom/>;
          # what is the destination?
          msg:destination owner:anon_randomNumber;
          msg:hasMethod
            [ msg:methodName msg:allocatedAtomURI;
              msg:methodReturn
                [msg:paramName "atomURI";
                 msg:paramName "http://www.example.com/resource/atom/100"
                ]
            ] .
            # Aslo allocate connection URI here??


