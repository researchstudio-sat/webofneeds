@prefix con:   <https://w3id.org/won/content#> .
@prefix match:   <https://w3id.org/won/matching#> .
##################################################################
#                   OWNER CREATES NEW ATOM
##################################################################

# URL of the document http://www.example.com/resource/atom/100/v1/core

@prefix :       <http://www.example.com/resource/atom/100/> .
@prefix owner:  <http://www.example.com/resource/owner/> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix geo:    <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix cert    <http://www.w3.org/ns/auth/cert#> .
@prefix tio:    <http://purl.org/tio/ns#> .
@prefix won:    <https://w3id.org/won/core#> .
@prefix crypt:  <https://w3id.org/won/cryptography#> .

##################################################################
#                     PERMANENT PART
# If this data changes, a new version of the resource MUST be
# created by the WoN node.
##################################################################

# owner-specified content (permanent):

# OA generates a new ID (if the ID already exists the WN refuses the atom creation an the
# OA has to generate a new one)
# or the OA sends a request to the WN to get a new URI

GRAPH :v1/core#data {

    :v1
        a won:Atom ;
        won:owner owner:anon_randomNumber
        # here you can add more core stuff like permanent description etc.
        .

    owner:anon_randomNumber1
        a won:Owner ;
        cert:key [ a crypt:ECCPublicKey ;
            crypt:ecc_curveID "brainpoolp384r1" ;
            crypt:ecc_algorithm "ECDSA" ;
            crypt:ecc_qx "3ef7047895a8b899b9c528e06bf225c564fa44e37fdb4b39155eb2f7ea85be8f43d27d5adf6c024f6ee1d8d5bbbaddcc"^^xsd:hexBinary ;
            crypt:ecc_qy "75ee2683e3e02342d547078367bd69fe2e819b4ba1e717eb968fd471ab07d6d899c7dbc19881c84a653ad87dd6270d89"^^xsd:hexBinary ;
            ] .
}

# signature of the permanent part of data:
:v1/core#data crypt:signature [
    rdf:type crypt:WonSignature ;

    # let's assume that the webID and the owner has always only one public key assigned
    # otherwise we have to identify the public key more specific
    crypt:signer owner:anon_randomNumber ;
    crypt:created "2013-09-252T10:49:54.050+0000" ;
    crypt:ecdsa_r "d84b41f7e60d0221008552305aee078db8b5a1c75556c4b452a2cc40"^^xsd:hexBinary ;
    crypt:ecdsa_s "375b013732a76aa2ab961e9ced750f2a23a34e5b6d84b41f7e60d022"^^xsd:hexBinary .
    ] .