##################################################################
#              NEED REPRESENTATION AT THE WON NODE               #
##################################################################

@prefix :       <http://www.example.com/resource/need/randomNeedID_1> .
@prefix remote: <http://www.remote-example.com/resource/need/randomNeedID_2> .
@prefix webID:  <http://www.example.com/webids/> .

@prefix won:    <http://purl.org/webofneeds/model#> .
@prefix crypt:  <http://purl.org/webofneeds/cryptography#> .
@prefix msg:    <http://purl.org/webofneeds/message#> .

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix tio:    <http://purl.org/tio/ns#> .
@prefix gr:     <http://purl.org/goodrelations/v1#> .


############# NEED META INFO ##############
# document URL: :[randomNeedID_1]/meta


# GRAPH
<http://www.example.com/resource/need/randomNeedID_1/meta#data> {

    :

        won:hasNeedEvents
            <http://www.example.com/resource/need/randomNeedID_1/needEvents> ;
        won:hasConnections
            <http://www.example.com/resource/need/randomNeedID_1/connections> ;

        won:isInState
            won:InActive ;
        won:hasFacet
            won:OwnerFacet .

        <http://www.example.com/resource/need/randomNeedID_1/needEvents>
            rdfs:member
                <http://www.example.com/resource/need/randomNeedID_1/event/0> ,
                <http://www.example.com/resource/need/randomNeedID_1/event/randomEventID_1_2> .

        <http://www.example.com/resource/need/randomNeedID_1/connections>
            rdfs:member
                <http://www.example.com/resource/need/randomNeedID_1/connection/randomConnectionID_1_1> .

        <http://www.example.com/resource/need/randomNeedID_1/connection/randomConnectionID_1_1>
            :won:hasEventContainer [
                rdfs:member
                    <http://www.example.com/resource/need/randomNeedID_1/connection/randomConnectionID_1_1/event/0> ,
                    <http://www.remote-example.com/resource/need/randomNeedID_2/connection/randomConnectionID_2_1/event/randomEventID_2_2>
            ]

}

<http://www.example.com/resource/need/randomNeedID_1/meta#data>
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:WN1
    ] .



############# NEED CORE CONTENT ##############
# document URL: :[randomNeedID_1]/core

# remains the same

############# NEED TRANSIENT CONTENT ##############
# document URL: :[randomNeedID_1]/transient

# remains the same

############# NEED MESSAGE 0 ##############
# document URL: :[randomNeedID_1]/event/0

# remains the same

############# CONNECT MESSAGE ##############
# document URL: :[randomNeedID_1]/connection/[randomConnectionID_1]/event/0

# remains the same

############# INCOMING CONNECT MESSAGE ##############
# document URL: remote:[randomNeedID_2]/connection/[randomConnectionID_2]/event/[randomEventID_2]

# remains the same

#GRAPH
<http://www.example.com/resource/need/randomNeedID_1/event/randomEventID_1_2#data> {

    <http://www.example.com/resource/need/randomNeedID_1/event/randomEventID_1_2>
        a msg:NeedStateMessage ;

        msg:newNeedState won:Inactive ;

        msg:senderNeed <http://www.example.com/resource/need/randomNeedID_1> ;
        msg:receiverNeed <http://www.example.com/resource/need/randomNeedID_1> ;
        msg:receiverNode <http://www.example.com> ;

        msg:refersTo
            <http://www.remote-example.com/resource/need/randomNeedID_2/event/0> .

        <http://www.remote-example.com/resource/need/randomNeedID_2/event/0#data>
            crypt:hasSignature [
                a crypt:WonSignature ;
                crypt:signer webID:owner_1
                # signature data ...
            ] .

}


############# MESSAGE SIGNATURE ##############

<http://www.example.com/resource/need/randomNeedID_1/event/randomEventID_1_2#data>
    crypt:hasSignature [
        a crypt:WonSignature ;
        crypt:signer webID:owner_1
        # signature data ...
    ]
