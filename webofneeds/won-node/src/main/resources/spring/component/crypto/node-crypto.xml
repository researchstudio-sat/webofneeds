<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:context="http://www.springframework.org/schema/context"        xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd         http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context-4.1.xsd">


    <bean id="keyStoreService" class="won.cryptography.service.keystore.FileBasedKeyStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${keystore.location}" />
        <constructor-arg type="java.lang.String" value="${keystore.password}" />
    </bean>

    <bean id="trustStoreService" class="won.cryptography.service.TrustStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${truststore.location}" />
        <constructor-arg type="java.lang.String" value="${truststore.password}" />
    </bean>
    <bean id="predefinedAliasStrategy" class="won.cryptography.ssl.PredefinedAliasPrivateKeyStrategy">
        <constructor-arg value="${uri.prefix.resource}" />
    </bean>
    <!--  we're going to use this bean in the activemq.xml config to allow access to all clients who registered in the webapp -->
    <bean id="nodeTrustManagerTLS" class="won.cryptography.ssl.TrustManagerWrapperWithTrustService">
    	<constructor-arg ref="trustStoreService" />
    </bean>
    
   <bean id="registrationClient" class="won.cryptography.service.RegistrationRestClientHttps" depends-on="cryptographyService">
        <constructor-arg ref="keyStoreService" />
        <constructor-arg name="privateKeyStrategy" ref="predefinedAliasStrategy" />
        <constructor-arg ref="trustStoreService"/>
        <constructor-arg>
            <bean class="won.cryptography.ssl.TOFUStrategy">
                <property name="trustStoreService" ref="trustStoreService" />
            </bean>
        </constructor-arg>
        <constructor-arg name="registrationQuery" value="?register=node" />
    </bean>
    
    <bean id="registrationServer" class="won.cryptography.service.RegistrationServerCertificateBased">
        <constructor-arg>
            <bean class="won.cryptography.ssl.TOFUStrategy">
                <property name="trustStoreService" ref="trustStoreService" />
                <property name="aliasGenerator">
                    <bean class="won.cryptography.ssl.AliasFromFingerprintGenerator" />
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="cryptographyService" class="won.cryptography.service.CryptographyService">
        <constructor-arg ref="keyStoreService" />
        <constructor-arg name="defaultAlias" value="${uri.prefix.resource}" />
        <!-- configure additional key to trust so that the activemq broker, which uses the tomcat certificate can connect to itself -->
        <property name="keyToTrustAlias" value="1"/>
        <property name="keyToTrustAliasUnder" value="${uri.host}" />
        <property name="keyToTrustKeystoreType" value="JKS" />
        <property name="keyToTrustFile" value="${activemq.broker.keystore}"/>        
        <property name="keyToTrustFilePassword" value="${activemq.broker.keystore.password}" />
    </bean>

    <bean id="linkedDataRestClient" class="won.protocol.rest.LinkedDataRestClientHttps">
        <constructor-arg ref="keyStoreService"/>
        <constructor-arg ref="trustStoreService"/>
        <constructor-arg name ="trustStrategy">
            <bean class="won.cryptography.ssl.TrustAnyCertificateStrategy" />
        </constructor-arg>
        <constructor-arg name="keyPairAliasDerivationStrategy">
            <bean class="won.cryptography.keymanagement.PredefinedAliasStrategy">
                <constructor-arg name="predefinedAlias" value="${uri.prefix.resource}"/>
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="messagingContext" class="won.cryptography.ssl.MessagingContext" >
        <constructor-arg ref="keyStoreService"/>
        <constructor-arg name="clientDefaultAliasKeyStrategy" ref="predefinedAliasStrategy"/>
        <constructor-arg ref="trustStoreService" />
    </bean>

</beans>