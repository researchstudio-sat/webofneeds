<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd


        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <bean id="monitoringInterceptor" class="org.javasimon.spring.MonitoringInterceptor"/>

    <aop:config proxy-target-class="false">
        <!-- name of the class or interface -->
        <!--aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.socket.impl.Socket.*(..))"/-->
        <!-- messaging would be nice to monitor but we'd have to extract interfaces for those beans
        aop:advisor advice-ref="monitoringInterceptor"
        pointcut="execution(* won.node.messaging.AtomProtocolAtomClientImplJMSBased.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.messaging.MatcherProtocolAtomServiceImplJMSBased.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.messaging.OwnerProtocolOwnerClientImplJMSBased.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor"
                     pointcut="execution(* won.node.messaging.OwnerProtocolAtomServiceImplJMSBased.*(..))"/-->
        <aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.protocol.impl.AtomProtocolAtomServiceImpl.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.protocol.impl.OwnerProtocolAtomServiceImpl.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.service.impl.DataAccessServiceImpl.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor" pointcut="execution(* won.node.service.impl.LinkedDataServiceImpl.*(..))"/>
        <aop:advisor advice-ref="monitoringInterceptor"
                     pointcut="execution(* won.protocol.repository.rdfstorage.RDFStorageService.*(..))"/>
    </aop:config>

    <!-- this may not be needed... not sure when and why -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

</beans>

