<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!--
         Load properties but ignore unresolvable properties so that
         they are searched in other property configurers defined in the context
    -->
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/node.properties" ignore-unresolvable="true"/>


    <!-- Defines where to search for annotated components -->
    <context:component-scan base-package="won.node.protocol.impl" />


    <!-- Database connection -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.sql.jdbcDriverClass}" />
        <property name="jdbcUrl" value="${db.sql.jdbcUrl}"/>
        <property name="user" value="${db.sql.user}" />
        <property name="password" value="${db.sql.password}" />
    </bean>

    <!-- Hibernate is used as JPA vendor-->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="generateDdl" value="true" /> <!-- Automatically create tables for the entity classes. Don't do this in production! -->
    </bean>



    <!-- Entity manager -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="won.protocol.model" />
        <!--
        The custom JpaDialect can be used to set the flush mode manually. Shouldn't be needed,
        but it's a neat trick :)
        <property name="jpaDialect">
           <bean class="won.protocol.util.hibernate.FlushModeSettingHibernateJpaDialect">
               <property name="flushMode" value="ALWAYS" />
           </bean>
        </property>
        -->

        <property name="jpaPropertyMap">
            <map>
                <!-- here's the right place to configure query caching and 2nd level cache -->
                <entry key="hibernate.cache.use_minimal_puts" value="true" />
                <entry key="hibernate.show_sql" value="false" />
            </map>
        </property>
    </bean>


    <!-- Session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!-- set a custom hibernate postgres dialect to create indices for foreign keys automatically -->
                <prop key="hibernate.dialect">won.protocol.util.hibernate.Postgres9WithFKIndicesDialect</prop>

                <prop key="hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Configure transaction management -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" />

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Defines where repositories are placed -->
    <jpa:repositories base-package="won.protocol.repository" />

</beans>