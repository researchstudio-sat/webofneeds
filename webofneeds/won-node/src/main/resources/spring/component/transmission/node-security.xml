<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <!--
         Load properties but ignore unresolvable properties so that
         they are searched in other property configurers defined in the context
    -->
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/node.properties" ignore-unresolvable="true"/>

    <!-- private keys and their certificates for node,
             possibly certificates of other parties-->



    <bean id="clientKeyStoreService" class="won.cryptography.service.KeyStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${keystore.location}" />
        <constructor-arg type="java.lang.String" value="${keystore.password}" />
        <property name="defaultAlias" value="${uri.prefix.resource}" />
    </bean>
    <!--bean id="serverKeyStoreService" class="won.cryptography.service.KeyStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${activemq.broker.keystore}" />
        <constructor-arg type="java.lang.String" value="${activemq.broker.keystore.password}" />
        <property name="defaultAlias" value="${activemq.broker.keystore.alias}" />
    </bean-->

    <bean id="trustStoreService" class="won.cryptography.service.TrustStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${truststore.location}" />
        <constructor-arg type="java.lang.String" value="${truststore.password}" />
    </bean>

    <bean id="cryptographyService" factory-bean="wonTransmissionService" factory-method="getClientCryptographyService">
    </bean>

    <bean id="wonTransmissionService" class="won.cryptography.service.DefaultSecurityWonTransmissionService">
        <!--property name="serverKeyStoreService" ref="serverKeyStoreService" /-->
        <property name="trustStoreService" ref="trustStoreService" />
        <property name="clientKeyStoreService" ref="clientKeyStoreService" />
        <property name="registrationQuery" value="?register=node"></property>
    </bean>

    <!-- TODO can be moved to messaging config -->
    <bean id="registrationClient" factory-bean="wonTransmissionService" factory-method="getRegistrationClient">
    </bean>

    <bean id="registrationServer" factory-bean="wonTransmissionService" factory-method="getRegistrationServer">
    </bean>


</beans>