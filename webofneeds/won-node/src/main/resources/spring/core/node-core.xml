<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <!--import resource="classpath:/spring/component/security/key-services.xml" /-->

    <!-- REST stuff -->
    <!-- required so our linked data client can convert strings into jena models -->
    <!--context:component-scan base-package="won.protocol.rest">
        <context:include-filter type="regex" expression="won.protocol.rest.*"/>
    </context:component-scan-->

    <bean id="uriService" class="won.node.service.impl.URIService">
        <property name="resourceURIPrefix" value="${uri.prefix.resource}" />
        <property name="dataURIPrefix" value="${uri.prefix.data}" />
        <property name="connectionResourceURIPrefix" value="${uri.prefix.connection}" />
        <property name="eventResourceURIPrefix" value="${uri.prefix.event}" />
        <property name="attachmentResourceURIPrefix" value="${uri.prefix.attachment}" />
        <property name="atomResourceURIPrefix" value="${uri.prefix.atom}" />
        <property name="pageURIPrefix" value="${uri.prefix.page}" />
        <property name="generalURIPrefix" value="${uri.prefix}" />
    </bean>

    <!-- Model Mapper for RDF -->
    <bean id="atomModelMapper" class="won.protocol.model.AtomModelMapper"></bean>
    <bean id="connectionModelMapper" class="won.protocol.model.ConnectionModelMapper"></bean>

    
    
    <bean id="unreadInformationService" class="won.protocol.service.impl.UnreadInformationService" />

    <bean id="linkedDataService" class="won.node.service.impl.LinkedDataServiceImpl">
        <property name="atomInformationService" ref="atomInformationService" />
        <property name="resourceURIPrefix" value="${uri.prefix.resource}" />
        <property name="dataURIPrefix" value="${uri.prefix.data}" />
        <property name="connectionResourceURIPrefix" value="${uri.prefix.connection}" />
        <property name="atomResourceURIPrefix" value="${uri.prefix.atom}" />
        <property name="eventResourceURIPrefix" value="${uri.prefix.event}" />
        <property name="pageURIPrefix" value="${uri.prefix.page}" />
        <property name="atomProtocolEndpoint" value="${uri.protocol.atom}" />
        <property name="matcherProtocolEndpoint" value="${uri.protocol.matcher}" />
        <property name="ownerProtocolEndpoint" value="${uri.protocol.owner}" />
        <property name="activeMqEndpoint" value="${uri.protocol.activemq}" />
        <property name="activeMqAtomProtcolQueueName" value="${activemq.queuename.atom.incoming}" />
        <property name="activeMqOwnerProtcolQueueName" value="${activemq.queuename.owner.incoming}" />
        <property name="activeMqMatcherPrtotocolQueueName" value="${activemq.queuename.matcher.incoming}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomActivated"
                  value="${activemq.matcher.outgoing.topicname.atom.activated}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomCreated"
                  value="${activemq.matcher.outgoing.topicname.atom.created}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomDeactivated"
                  value="${activemq.matcher.outgoing.topicname.atom.deactivated}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomDeleted"
                  value="${activemq.matcher.outgoing.topicname.atom.deleted}"/>
        <property name="uriService" ref="uriService" />
    </bean>

    <bean id="queueManagementService" class="won.node.service.impl.QueueManagementServiceImpl"/>

    <bean id="messagingService" class="won.protocol.jms.MessagingServiceImpl">
        <property name="producerTemplate" ref="producerTemplate"/>
    </bean>

    <!--bean id="QueueManagementService" class="won.node.service.impl.QueueManagementServiceImpl"/-->

    <!--- DataAccessService -->
    <bean id="dataServiceRef" class="won.node.service.impl.DataAccessServiceImpl" depends-on="linkedDataService">
        <property name="URIService" ref="uriService" />
    </bean>


    <bean id="atomInformationService" class="won.node.service.impl.AtomInformationServiceImpl">
        <property name="pageSize" value="${linkeddata.pagesize}" />
    </bean>

    <bean id="ownerManagementService" class="won.node.service.impl.OwnerManagementServiceImpl"/>
    
    
    <bean id="socketService" class="won.node.socket.SocketService" />
    <!--
    <bean id="keyStoreService" class="won.cryptography.service.keystore.FileBasedKeyStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${keystore.location}" />
    </bean>
    <bean id="trustStoreService" class="won.cryptography.service.TrustStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${truststore.location}" />
    </bean>

    <bean id="cryptoService" class="won.cryptography.service.CryptographyService">
        <constructor-arg ref="keyStoreService" />
    </bean>

    <bean id="nodeCertificateOnStartupCreator"
          class="won.node.service.impl.NodeCertificateOnStartupCreator"
          autowire="byType"/>
-->

</beans>