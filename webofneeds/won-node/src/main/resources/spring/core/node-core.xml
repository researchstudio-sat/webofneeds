<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!--import resource="classpath:/spring/component/security/key-services.xml" /-->

    <!-- REST stuff -->
    <!-- required so our linked data client can convert strings into jena models -->
    <!--context:component-scan base-package="won.protocol.rest">
        <context:include-filter type="regex" expression="won.protocol.rest.*"/>
    </context:component-scan-->

    <bean id="uriService" class="won.node.service.nodeconfig.URIService">
        <property name="resourceURIPrefix" value="${uri.prefix.resource}" />
        <property name="dataURIPrefix" value="${uri.prefix.data}" />
        <property name="pageURIPrefix" value="${uri.prefix.page}" />
        <property name="generalURIPrefix" value="${uri.prefix}" />
    </bean>

    <!-- Model Mapper for RDF -->
    <bean id="atomModelMapper" class="won.protocol.model.AtomModelMapper"></bean>
    <bean id="connectionModelMapper" class="won.protocol.model.ConnectionModelMapper"></bean>

    
    
    <bean id="unreadInformationService" class="won.protocol.service.impl.UnreadInformationService" />

    <bean id="linkedDataService" class="won.node.service.linkeddata.generate.LinkedDataServiceImpl">
        <property name="atomInformationService" ref="atomInformationService" />
        <property name="resourceURIPrefix" value="${uri.prefix.resource}" />
        <property name="activeMqEndpoint" value="${uri.protocol.activemq}" />
        <property name="activeMqAtomProtcolQueueName" value="${activemq.queuename.atom.incoming}" />
        <property name="activeMqOwnerProtcolQueueName" value="${activemq.queuename.owner.incoming}" />
        <property name="activeMqMatcherPrtotocolQueueName" value="${activemq.queuename.matcher.incoming}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomActivated"
                  value="${activemq.matcher.outgoing.topicname.atom.activated}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomCreated"
                  value="${activemq.matcher.outgoing.topicname.atom.created}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomDeactivated"
                  value="${activemq.matcher.outgoing.topicname.atom.deactivated}"/>
        <property name="activeMqMatcherProtocolTopicNameAtomDeleted"
                  value="${activemq.matcher.outgoing.topicname.atom.deleted}"/>
        <property name="uriService" ref="uriService"/>
    </bean>


    <bean id="messagingService" class="won.protocol.jms.MessagingServiceImpl">
        <property name="producerTemplate" ref="producerTemplate"/>
    </bean>

    <context:component-scan base-package="won.node.service.persistence"/>
    <context:component-scan base-package="won.node.service.linkeddata.*"/>
    <context:component-scan base-package="won.node.service.nodebehaviour"/>
    <context:component-scan base-package="won.node.camel.service"/>
    <context:component-scan base-package="won.protocol.service.impl"/>

    <bean id="socketAuthorizationSource" class="won.auth.socket.impl.LDSocketAuthorizationSource"/>

    <bean id="aclEnforcer" class="won.node.springsecurity.acl.AclEnforcer"/>

    <bean id="atomInformationService" primary="true"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces" value="won.node.service.persistence.AtomInformationService"/>
        <property name="target" ref="plainAtomInformationService"/>
        <property name="interceptorNames">
            <list>
                <value>aclEnforcer</value>
            </list>
        </property>
    </bean>

    <bean id="plainAtomInformationService" class="won.node.service.persistence.AtomInformationServiceImpl">
        <property name="pageSize" value="${linkeddata.pagesize}"/>
    </bean>

    <bean id="ownerManagementService" class="won.node.service.persistence.ActiveMqOwnerManagementServiceImpl"/>

    <bean id="messageRoutingInfoService" class=" won.node.protocol.impl.MessageRoutingInfoServiceImpl"/>


</beans>