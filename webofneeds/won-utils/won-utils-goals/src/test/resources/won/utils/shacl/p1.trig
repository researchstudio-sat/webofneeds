@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix s: <http://schema.org/> .

@prefix ex1: <http://example.org/1/> .
@prefix ex2: <http://example.org/2/> .
@prefix voc: <http://example.org/myvocabulary/> .
@prefix taxi: <http://example.org/taxi/> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .

# data provided by participant "p1" (identified by ex:p1)

ex1:p1-data {
ex1:p1 voc:hasGoal ex1:p1g.
ex1:p1g voc:dataGraph ex1:p1g-data;
     voc:shapesGraph ex1:p1g-shapes.
}

ex1:p1g-data {
   ex1:ride1 a taxi:Ride .
   ex1:ride1 taxi:hasDriver ex1:p1 . # note: p1 links her own identifier to the structure
}

ex1:p1g-shapes {

ex1:selfShape
    a sh:NodeShape ;
    sh:targetNode ex1:p1 ;
    sh:property [
        sh:path [ sh:inversePath taxi:hasDriver ];
        sh:class taxi:Ride ;
    ] .

ex1:TaxiRideShape
	a sh:NodeShape ;
    sh:targetClass taxi:Ride ;
	sh:property [
		sh:path taxi:hasPickupLocation ;
		sh:minCount 1 ;
		sh:maxCount 1 ;
        sh:class s:GeoCoordinates
	] ;
	sh:property [
		sh:path taxi:hasPickupTime;
		sh:minCount 1 ;
		sh:maxCount 1 ;
        sh:datatype xsd:dateTime;
	] ;
    sh:property [
		sh:path taxi:hasClient;
		sh:minCount 1 ;
		sh:maxCount 1 ;
		sh:nodeKind sh:IRI ;
	] ;
	sh:property [
		sh:path taxi:hasDriver;
		sh:minCount 1 ;
		sh:maxCount 1 ;
		sh:hasValue ex1:p1 ;    # p1's shape ties her own identifier to the data
	] ;
	sh:ignoredProperties ( rdf:type ) ;
	sh:closed true .
}