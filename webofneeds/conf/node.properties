#
# Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#URI prefixes and paths used for HTTP request mapping and creation of new URIs
uri.host=localhost
http.port=8080
uri.prefix=http://${uri.host}:${http.port}/won

uri.path.resource            =/resource
uri.path.data                =/data
uri.path.page                =/page
uri.path.resource.need       =${uri.path.resource}/need
uri.path.data.need           =${uri.path.data}/need
uri.path.page.need           =${uri.path.page}/need
uri.path.resource.connection =${uri.path.resource}/connection
uri.path.data.connection     =${uri.path.data}/connection
uri.path.page.connection     =${uri.path.page}/connection
uri.path.resource.event      =${uri.path.resource}/event
uri.path.data.event          =${uri.path.data}/event
uri.path.page.event          =${uri.path.page}/event
uri.path.resource.attachment =${uri.path.resource}/attachment
uri.path.data.attachment     =${uri.path.data}/attachment
uri.path.page.attachment     =${uri.path.page}/attachment

uri.prefix.resource   =${uri.prefix}${uri.path.resource}
uri.prefix.data       =${uri.prefix}${uri.path.data}
uri.prefix.page       =${uri.prefix}${uri.path.page}
uri.prefix.need       =${uri.prefix}${uri.path.resource.need}
uri.prefix.node       =${uri.prefix}${uri.path.resource}
uri.prefix.connection =${uri.prefix}${uri.path.resource.connection}
uri.prefix.event      =${uri.prefix}${uri.path.resource.event}
uri.prefix.attachment =${uri.prefix}${uri.path.resource.attachment}

#the protocol URIs below must match what's defined in the sun-jaxws.xml file in the webapp
uri.protocol.need=${uri.prefix}/protocol/need
uri.protocol.matcher=${uri.prefix}/protocol/matcher
uri.protocol.owner=${uri.prefix}/protocol/owner

#the protocol URIs below must match the activemq config in the webapp
activemq.broker.port=61616
uri.protocol.activemq=tcp://${uri.host}:${activemq.broker.port}
activemq.queuename.need.incoming=NeedProtocol.in
activemq.queuename.owner.incoming=OwnerProtocol.in
activemq.queuename.matcher.incoming=MatcherProtocol.in
activemq.matcher.outgoing.topicname.need.created = MatcherProtocol.Out.Need
activemq.matcher.outgoing.topicname.need.activated = MatcherProtocol.Out.Need
activemq.matcher.outgoing.topicname.need.deactivated = MatcherProtocol.Out.Need
activemq.matcher.outgoing.topicname.matcher.registered = MatcherProtocol.Out.Matcher

#default WON node URI
uri.node.default=${uri.prefix.node}

#RDF File storage
rdf.file.path=

#SQL db configuration
#db.sql.jdbcDriverClass=org.postgresql.Driver
#db.sql.jdbcUrl=jdbc:postgresql://localhost/won_node
#db.sql.user=test
#db.sql.password=test

#hsql db configuration
db.sql.jdbcDriverClass=org.hsqldb.jdbcDriver
db.sql.jdbcUrl=jdbc:hsqldb:mem:testdb
db.sql.user=sa
db.sql.password=

# with file
# jdbc:hsqldb:file:mydb;ifexists=true

#linked data configuration

#maximum number of objects in potentially large, therefore pageable listings
linkeddata.pagesize=500

broker.uri=

#directory where monitoring statistics are periodically dumped (leave empty to let java create temp files)
monitoring.output.dir=
#milliseconds between two consecutive monitoring statistics dumps
monitoring.interval.seconds=1800
#reset the monitoring stats after output? (allows for comparing periods to track change more clearly)
monitoring.reset.after.output=true

# keystore properties
keystore.password=
keystore.location=node-keystore.jks
