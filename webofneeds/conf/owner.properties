#
# Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#URI prefixes
#careful when changing these: they are defined in multiple places throughout the project.
uri.scheme=https
uri.host=localhost
http.port=8443
uri.prefix=${uri.scheme}://${uri.host}:${http.port}
uri.prefix.owner=${uri.prefix}/owner
uri.owner.protocol.endpoint=${uri.prefix.owner}/protocol

# node.default.host must be the full uri of the won node like specified in won node resource description rdf page
# otherwise owner cannot connect to won node
node.default.scheme=https
node.default.host=localhost
node.default.http.port=8443
uri.prefix.node.default=${node.default.scheme}://${node.default.host}:${node.default.http.port}/won


# default WON node URI
uri.node.default=${uri.prefix.node.default}/resource

#the protocol URIs below must match what's defined in the sun-jaxws.xml file in the webapp
uri.atom.protocol.endpoint.default=${uri.prefix.node.default}/protocol/owner

# DB - Alternative: local postgresql (have fun with the setup)
#db.sql.jdbcDriverClass=org.postgresql.Driver
#db.sql.jdbcUrl=jdbc:postgresql://192.168.124.53:5432/won_owner
#db.sql.user=won
#db.sql.password=won
#db.ddl.strategy=validate

# DB - Alternative: postgresql on on satsrv04
# db.sql.jdbcDriverClass=org.postgresql.Driver
# db.sql.jdbcUrl=jdbc:postgresql://satsrv04:5432/won_owner
# db.sql.user=won
# db.sql.password=won
# db.ddl.strategy=validate

# DB - Alternative: local hsql
db.sql.jdbcDriverClass=org.hsqldb.jdbcDriver
db.sql.jdbcUrl=jdbc:hsqldb:mem:testdb2;hsqldb.tx=mvcc
db.sql.user=sa
db.sql.password=
db.ddl.strategy=create

#linked data configuration

#directory where monitoring statistics are periodically dumped (leave empty to let java create temp files)
monitoring.output.dir=
#milliseconds between two consecutive monitoring statistics dumps
monitoring.interval.seconds=3600
#reset the monitoring stats after output? (allows for comparing periods to track change more clearly)
monitoring.reset.after.output=true

#e-mail account configuration intended for outgoing emails to inform users about their atom's private link,
#message notifications etc.
email.from.won.smtp.host=
email.from.won.user=
email.from.won.password=

# keystore properties
keystore.password=temp
keystore.location=/usr/local/tomcat/won/client-certs/owner-keys.jks

#if the fixedPrivateKeyAlias is empty or null, the processor generates a new key pair for every atom, if
# it is a string, the processor uses the same key pair for all atoms and stores it under the specified alias
owner.fixedPrivateKeyAlias=
#owner.fixedPrivateKeyAlias=${uri.prefix.owner}

# truststore properties
truststore.password=temp
truststore.location=/usr/local/tomcat/won/client-certs/owner-trusted-certs.jks

# certificate properties
CERTIFICATE_PASSWORD=changeit

# key used for salting the remember-me tokens
owner.webapp.rememberme.key=changeit
