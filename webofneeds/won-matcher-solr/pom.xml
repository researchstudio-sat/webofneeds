<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>webofneeds</artifactId>
        <groupId>webofneeds</groupId>
        <version>0.2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <groupId>webofneeds</groupId>
    <artifactId>won-matcher-solr</artifactId>
    <name>Matcher Solr</name>
    <dependencies>
        <!--

                  Warning! Only to be used in connection with the
                  <dependencyManagement> section in the parent pom!

         -->
        <!-- Web of Needs -->
        <dependency>
            <groupId>webofneeds</groupId>
            <artifactId>won-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>webofneeds</groupId>
            <artifactId>won-matcher</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Solr -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr</artifactId>
            <type>war</type>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-core</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <dependency>
            <artifactId>solr-solrj</artifactId>
            <groupId>org.apache.solr</groupId>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <!-- SIREn-->
        <dependency>
            <groupId>org.sindice.siren</groupId>
            <artifactId>siren-solr</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>

        <!-- SPIN -->
        <dependency>
            <groupId>org.topbraid</groupId>
            <artifactId>spin</artifactId>
            <scope>${dependencies.scope}</scope>
        </dependency>


        <!-- START: used for testing solr -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>test</scope>
        </dependency>


        <!-- END: used for testing solr -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <filters>
            <filter>src/main/profiles/config.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <configuration>
                    <files>
                        <!-- Properties are read from profile specific property file -->
                        <file>src/main/profiles/config.properties</file>
                    </files>
                </configuration>
                <executions>
                    <!-- Load properties for the default lifecycle -->
                    <execution>
                        <id>default-lifecycle-properties</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                    </execution>
                    <!-- Load properties for the clean lifecycle -->
                    <execution>
                        <id>clean-lifecycle-properties</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies-to-solr-dir</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/siren/won-matcher-solr/</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <!--excludeScope>provided</excludeScope-->
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                        </configuration>
                    </execution>

                    <execution>  <!-- TODO: do we need this? -->
                        <id>copy-won-dependencies-to-solr-dir</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/siren/won-matcher-solr/</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <includeScope>test</includeScope> <!-- should select all required project artifacts irrespective of scope -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                TODO for the motivated
                automatically do this:
                * zip the target siren folder
                * scp to server
                * sshexec (goldin) to
                    * unpack and
                    * chown to tomcat (user/group should be a property in settings)
                    * restart tomcat (command should be set in settings)
             -->
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- activate this to build the Solr/SIREn webapp directory needed for the first version of the
             SIREn based matcher. Only works with maven version <= 3.0.5 because of the maven-copy-plugin.
             Deactivated as the original matcher service will be removed from the project and other plugins
             (maven-frontend-plugin) requires maven version >= 3.1.0
             tl;dr: To use this, you need maven 3.0.5, and it will build the matcher
            -->
            <id>generate-siren-webapp-dirs</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.goldin</groupId>
                        <artifactId>copy-maven-plugin</artifactId>
                        <executions>
                            <!-- Copy Solr configuration file when compile phase is executed -->
                            <execution>
                                <id>copy-solr-config</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <!--
                                            Copies the complete siren folder to the target dir
                                        -->
                                        <resource>
                                            <!-- TODO: the solr war file is corrupted through filtering! exclude and copy without filtering-->
                                            <directory>${project.basedir}/siren</directory>
                                            <preservePath>true</preservePath>
                                            <targetPath>${project.build.directory}/${project.artifactId}-${project.version}/siren</targetPath>
                                        </resource>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <include>${project.build.finalName}.jar</include>
                                            <targetPath>${project.build.directory}/${project.artifactId}-${project.version}/siren/won-matcher-solr/</targetPath>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>upload-to-server</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <targetPath>${solr.upload.dest}</targetPath>
                                            <directory>${project.build.directory}/${project.artifactId}-${project.version}</directory>
                                            <preservePath>true</preservePath>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
