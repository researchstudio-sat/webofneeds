<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">


	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

	<context:component-scan base-package="won.owner.web"/>

	<mvc:default-servlet-handler />

	<mvc:annotation-driven/>

	<!-- bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/ -->

	<!-- the application context definition for the springapp DispatcherServlet -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	    <!-- it seems the following config element plus dependencies is required
         to get produces/consumes working in spring 3.1
    -->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="won.protocol.rest.RdfModelConverter" />
            <bean class="won.protocol.rest.RdfDatasetConverter"/>
            <bean class="won.protocol.rest.RdfDatasetAttachmentConverter"/>
				    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				              <property name="supportedMediaTypes">
				                <list>
				                  <value>application/json</value>
				                </list>
				              </property>
				    </bean>         
        </mvc:message-converters>
    </mvc:annotation-driven>
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	
	
    
    <!--
    we move to annotation config in WebSocketConfig.java
    websocket:handlers>
        <websocket:mapping path="/msg" handler="wonWebSocketHandler"/>
        <websocket:handshake-interceptors>
            <bean class="won.owner.web.websocket.WonHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
        <websocket:sockjs/>
    </websocket:handlers-->

    <bean id="wonWebSocketHandler" class="won.owner.web.websocket.WonWebSocketHandler">
        <property name="ownerApplicationService" ref="ownerApplicationService" />
    </bean>
    
    <bean id="serverSideActionService" class="won.owner.web.service.ServerSideActionService">
        <property name="ownerApplicationService" ref="ownerApplicationService" />
    </bean>
    
    <bean id="webSocketSessionService" class="won.owner.web.websocket.WebSocketSessionService"/>
 </beans>
