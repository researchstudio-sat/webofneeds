@import "text";

@function calcVerticalPaddingToHeight(
  $fontSize,
  $lineHeightFactor,
  $borderWidth,
  $intendedHeight
) {
  $heightOfALine: $fontSize * $lineHeightFactor;
  $verticalPadding: ($intendedHeight - $heightOfALine) / 2 - $borderWidth;
  @return $verticalPadding;
}
/* *
 * Pads a textfield so it has the $intendedHeight. Note, that for growing
 * textareas this only holds at the start, tho ^^ */
@mixin padToHeight(
  $fontSize,
  $lineHeightFactor,
  $borderWidth,
  $intendedHeight
) {
  font-size: $fontSize;
  border-width: $borderWidth;
  $verticalPadding: calcVerticalPaddingToHeight(
    $fontSize,
    $lineHeightFactor,
    $borderWidth,
    $intendedHeight
  );
  padding-top: $verticalPadding;
  padding-bottom: $verticalPadding;
  padding-left: 0.438 * $fontSize;
  padding-right: 0.438 * $fontSize;
}
@mixin textfieldPadding(
  $fontSize,
  $lineHeightFactor,
  $borderWidth,
  $intendedHeight
) {
  @include padToHeight(
    $fontSize,
    $lineHeightFactor,
    $borderWidth,
    $intendedHeight
  );
  padding-left: 0.438 * $fontSize;
  padding-right: 0.438 * $fontSize;
}
.won-txt {
  border-style: solid;
  border-radius: 0.19rem;
  min-width: 0;
  // so a size is specified and break-word works
  word-break: break-word;
  @include textfieldPadding(
    $normalFontSize,
    22/16,
    $thinBorderWidth,
    $formInputHeight
  );
  &:focus {
    color: black;
  }
  &.won-txt--valid {
    border-color: $won-line-gray;
  }
  &.won-txt--invalid {
    border-color: $won-primary-color;
  }
  &.won-txt--code {
    @include textfieldPadding(
      $smallFontSize,
      22/16,
      $thinBorderWidth,
      $formInputHeight
    );
    font-family: $font-family-monospace;
  }
}
