@import "sizing-utils";
@import "text";
@import "flex-layout";
@import "reset";

body {
  @media (max-width: $responsivenessBreakPoint) {
    --headerHeight: 3.3rem;
    --menuHeight: 0rem;
  }
  @media (min-width: $responsivenessBreakPoint) {
    --headerHeight: 3.3rem;
    --menuHeight: 2.7rem;
  }

  //this font will be inherited down the cascade
  @include default-font;
  background-color: $won-lighter-gray;

  > section.ng-scope > section {
    display: grid;
    min-height: 100vh;

    &:not(.won-signed-out) {
      @media (max-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header"
          "info"
          "list"
          "content"
          "footer";
        grid-template-rows: min-content min-content min-content 1fr min-content;
      }

      @media (min-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header header header header"
          "menu menu menu menu"
          "info info info info"
          ". list content ."
          ". . . ."
          "footer footer footer footer";
        grid-template-rows: min-content min-content min-content max-content 1fr min-content;
        grid-template-columns:
          1fr minmax(min-content, $maxContentWidth/3) minmax(
            min-content,
            (($maxContentWidth/3) * 2)
          )
          1fr;
      }
    }

    &.won-signed-out {
      @media (max-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header"
          "info"
          "list"
          "content"
          "footer";
        grid-template-rows: min-content min-content min-content 1fr min-content;
      }

      @media (min-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header header header header"
          "info info info info"
          ". list content ."
          ". . . ."
          "footer footer footer footer";
        grid-template-rows: min-content min-content max-content 1fr min-content;
        grid-template-columns:
          1fr minmax(min-content, $maxContentWidth/2) minmax(
            min-content,
            $maxContentWidth/2
          )
          1fr;
      }
    }

    > won-topnav {
      grid-area: header;
      position: sticky;
      box-sizing: border-box;
      height: var(--headerHeight);
      top: 0;
      z-index: 1000;
    }

    > won-toasts,
    > won-slide-in {
      grid-area: info;
    }

    > won-menu {
      grid-area: menu;
    }

    > won-menu {
      box-sizing: border-box;
      height: var(--menuHeight);
      top: var(--headerHeight);
      z-index: 999;

      &.won-menu--show-mobile {
        position: fixed;
        height: calc(100vh - var(--headerHeight));
        width: 80vw;
        max-width: 80vw;
        transition: max-width linear 0.25s;
        overflow-y: hidden;
        border-right: $thinGrayBorder;
      }

      &:not(.won-menu--show-mobile) {
        position: sticky;

        @media (max-width: $responsivenessBreakPoint) {
          position: fixed;
          height: calc(100vh - var(--headerHeight));
          width: 80vw;
          max-width: 0;
          transition: max-width linear 0.25s;
          overflow-y: hidden;
          border-right: 0;
        }
      }
    }

    > aside.overview__left {
      grid-area: list;
      z-index: 2;
    }

    > main.overview__nochats {
      grid-area: content;
      grid-column: 1 / -1;
      > .overview__nochats__empty {
        box-sizing: border-box;
        position: sticky;
        top: var(--headerHeight);
        height: calc(100vh - var(--headerHeight) - var(--menuHeight));
      }
    }

    > main.overview__rightempty {
      grid-area: content;

      > .overview__rightempty__noselection {
        box-sizing: border-box;
        position: sticky;
        top: var(--headerHeight);
        height: calc(100vh - var(--headerHeight) - var(--menuHeight));
      }
    }

    > main.overview__right {
      grid-area: content;

      > * {
        box-sizing: border-box;
        position: sticky;
        top: var(--headerHeight);

        border-right: $thinGrayBorder;
        border-bottom: $thinGrayBorder;
        @media (max-width: $responsivenessBreakPoint) {
          border-right: none;
        }
        background: white;
      }

      > won-group-atom-messages,
      > won-atom-messages {
        height: calc(100vh - var(--headerHeight) - var(--menuHeight));
      }
    }

    > main.signup,
    > main.about {
      grid-area: list;
      @media (min-width: $responsivenessBreakPoint) {
        grid-column: 1 / -1;
      }
    }

    > main.settings {
      grid-area: list;
      @media (min-width: $responsivenessBreakPoint) {
        grid-column: 2 / 4;
      }
    }

    > won-footer {
      grid-area: footer;
    }
  }
}

input[type="text"],
input[type="password"],
input[type="email"] {
  display: block;
  padding: 0.66rem;
  box-sizing: border-box;
  border-radius: 0.19rem;
  border: $thinGrayBorder;
  font-size: 16px;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="date"],
input[type="time"],
input[type="url"],
input[type="number"],
select,
textarea {
  &:focus {
    outline-color: $won-secondary-color;
  }
}

.clickable {
  cursor: pointer;
  user-select: none;
}

.hspinner {
  max-width: 2.25rem;
  max-height: 2.25rem;
  --local-primary: #{$won-primary-color};
  --local-secondary: #{$won-secondary-color};
}

hr {
  border: 0;
  height: 1px;
  background: $won-line-gray;
  color: $won-line-gray;
}

a {
  //color: $won-primary-color;
  color: $won-secondary-color-lighter;
  text-decoration: none;
  &:visited {
    //color: darken($won-primary-color, 30%);
    color: $won-secondary-color-light;
  }
}

svg {
  user-select: none;
}

//TODO in topnav, make create-button black when the dialog is open
//TODO the :hover isn't usable on touch displays (require alternate path to get to the help text) - dog-ears + peel-slide?
//TODO enable keyboard selection. add aria-information

.wonCurrentLocationMarkerIcon > .marker {
  width: 15px;
  height: 15px;
  background-color: $won-primary-color;
  border-radius: 100%;
}

.wonLocationMarkerIcon > .marker__icon {
  @include fixed-square($contentInfoHeaderIconSize);
  --local-primary: #{$won-primary-color};
}

//QUICK FIX for broken elm back button
main.settings won-svg-icon {
  @include fixed-square($postIconSize);
  > svg {
    @include fixed-square($postIconSize);
  }
}
