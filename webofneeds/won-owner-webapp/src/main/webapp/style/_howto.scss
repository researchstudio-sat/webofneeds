@import "won-config";
@import "sizing-utils";
@import "fonts";

won-how-to {
  display: block;

  .howto__title {
    text-align: center;
    color: $won-primary-color;
    padding-bottom: 0.25rem;
    font-weight: normal;
  }
  h1.howto__title {
    font-size: $bigFontSize;
  }
  h2.howto__title {
    font-size: $mediumFontSize;
  }

  h3.howto__subtitle {
    text-align: center;
    font-size: $normalFontSize;
    font-weight: bold;
    max-width: 16rem;
    margin: 0 auto;
  }
  .howto__steps {
    display: grid;
    grid-column-gap: 1rem;
    grid-row-gap: 2rem;
    grid-template-columns: repeat(3, min-content);
    grid-template-rows: min-content minmax(10rem, min-content);
    justify-content: center;
    padding: 2rem 1rem 1rem 1rem;
    @media (max-width: $responsivenessBreakPoint) {
      grid-column-gap: 0.5rem;
      padding: 1rem 0.5rem 1rem 0.5rem;
    }

    &__process {
      --howToColCount: 4; //Todo: figure out a way to inject this var from angular
      --iconSize: 7rem;
      --stepIndicatorSize: 2rem;
      --stepIndicatorBorderWidth: 0.25rem;

      grid-column: 2;
      display: grid;
      grid-column-gap: 2rem;
      grid-template-columns: repeat(var(--howToColCount), min-content);
      justify-items: center;

      @media (max-width: $responsivenessBreakPoint) {
        --iconSize: 3rem;
        grid-column-gap: 0.5rem;
      }

      &__icon {
        --local-primary: #{$won-primary-color};
        @include fixed-square(var(--iconSize));
        margin-bottom: 1rem;
        cursor: pointer;

        &--selected {
          cursor: default;
        }
      }

      &__stepcount {
        @include fixed-square(var(--stepIndicatorSize));
        text-align: center;
        border-radius: 100%;
        background: $won-secondary-text-color;
        color: $won-primary-color;
        border: var(--stepIndicatorBorderWidth) solid $won-primary-color;
        box-sizing: border-box;
        font-weight: bold;
        cursor: pointer;
        position: relative;
        z-index: 2;

        &--selected {
          background: $won-primary-color;
          color: $won-secondary-text-color;
          cursor: default;
        }
      }

      //This snippet is so we can have a horizontal line across the stepcount row
      &__stepline {
        grid-column: 1 / -1;
        height: 0;
        width: 100%;
        box-sizing: border-box;
        /*The calculation below is so we do not display the line on the left side of the first
        element and on the right side of the last element, we achieve this via a padding since our stepline
        stretches across all existing columns anyway.

        How do we do this?
          we know that the all columns are the same size and that the columnwidth itself is the min-width of the column-content (in our case this is the --iconSize)
          since we also know that the content of each column will be centered, we know that the automatically created margin
          of the smaller column can't be bigger than half the size of the largest column width
        */
        padding: 0 calc(var(--iconSize) / 2);

        &:before {
          display: block;
          position: relative;
          width: 100%;
          height: var(--stepIndicatorBorderWidth);

          /*The last thing we have to do is move the line behind the row above directly in the center of the height*/
          top: calc(
            (
                var(--stepIndicatorSize) -
                  (
                    (var(--stepIndicatorSize) - var(--stepIndicatorBorderWidth)) /
                      2
                  )
              ) * -1
          );
          content: "";
          background-color: $won-primary-color;
          z-index: 1;
        }
      }
    }

    &__button {
      margin-top: 1rem;
      cursor: pointer;
      --local-primary: #{$won-primary-color};
      @include fixed-square(2.5rem);

      &--invisible {
        visibility: hidden;
      }

      &--prev {
        grid-column: 1;
        grid-row: 2;
      }

      &--next {
        grid-column: 3;
        grid-row: 2;
        transform: rotate(180deg);
      }
    }

    &__detail {
      text-align: center;
      grid-column: 2;
      grid-row: 2;
      &__title {
        padding-bottom: 0.5rem;
        font-size: $normalFontSize;
        font-weight: bold;
      }
      &__text {
        font-weight: 200;
      }
    }
  }
  .howto__createx {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 0.5rem;
    max-width: 30rem;
    padding-top: 1.5rem;
    margin: 0 auto;
    grid-row-gap: 1.5rem;

    &__button {
      @media (min-width: $responsivenessBreakPoint) {
        white-space: nowrap;
      }
    }

    &__button {
      white-space: normal;
    }

    &__spanbutton,
    &__labelledhr {
      grid-column: 1 / -1;
    }
  }
}
