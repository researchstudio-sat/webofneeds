@import "won-config";
@import "sizing-utils";
@import "fonts";

main.about {
  grid-column: 1 / -1;
  font-weight: 300;

  //General Section styling
  & > section {
    width: 100%;
    box-sizing: border-box;

    padding: 4rem $minContentPadding 7rem $minContentPadding;
    @media (max-width: $responsivenessBreakPoint) {
      padding-top: 2rem;
      padding-bottom: 4rem;
      padding-left: 0.5rem;
      padding-right: 0.5rem;
    }
  }

  & > .about__welcome {
    background-color: $won-secondary-color;
    color: white;
    font-family: $font-family-sans-serif;
    background-image: url("../images/network_left-upper-corner.svg"),
      url("../images/network_right-lower-corner.svg");
    background-position: left top, right bottom;
    background-repeat: no-repeat;
    /* * @ background-size:
       * values have been determined via fiddling/experimenting and should provide
       * a smooth transition with a relative size for the background up to a
       * maximum size. */
    background-size: auto 70%, auto 100%;
    @media (max-width: 85rem) {
      background-size: auto 70%, 31.7% auto;
    }
    @media (max-width: 63rem) {
      background-size: 60% auto, 31.7% auto;
    }

    .about__welcome__title {
      text-align: center;
      font-size: $bigFontSize;
      padding-bottom: 2rem;
      color: white;
    }

    .about__welcome__grid {
      margin-left: auto;
      margin-right: auto;
      $fourPortraitsWidth: 59rem;
      width: $fourPortraitsWidth;
      @media (max-width: $fourPortraitsWidth) {
        width: $fourPortraitsWidth / 2;
      }
      @media (max-width: $responsivenessBreakPoint) {
        width: $fourPortraitsWidth / 4;
      }
      @media (max-width: $fourPortraitsWidth / 2) {
        width: $fourPortraitsWidth / 4;
      }
    }

    .about__welcome__description {
      margin: 0 auto;
      max-width: 30rem;
      text-align: center;
      padding: 1rem;
      font-size: $smallFontSize;
      font-weight: 400;
      &__title {
        display: block;
        color: $won-primary-color;
        font-size: $normalFontSize;
        border-top: $thinBorderWidth solid $won-dark-purple;
        max-width: 22rem;
        margin: 0 auto;
      }
      &__text {
        text-align: left;
        display: block;
      }
      &__more {
        color: $won-primary-color;
      }
      &__arrow {
        display: block;
        margin: 0 auto;
        @include fixed-square(1rem);
      }
    }
  }

  & > .about__howto {
    .about__howto__title {
      text-align: center;
      color: $won-primary-color;
      padding-bottom: 0.25rem;
      font-weight: normal;
    }
    h1.about__howto__title {
      font-size: $bigFontSize;
    }
    h2.about__howto__title {
      font-size: $mediumFontSize;
    }

    h3.about__howto__subtitle {
      text-align: center;
      font-size: $normalFontSize;
      font-weight: bold;
      max-width: 16rem;
      margin: 0 auto;
    }
    .about__howto__steps {
      display: grid;
      grid-column-gap: 1rem;
      grid-row-gap: 2rem;
      grid-template-columns: repeat(3, min-content);
      grid-template-rows: min-content minmax(10rem, min-content);
      justify-content: center;
      padding: 2rem 1rem 1rem 1rem;
      @media (max-width: $responsivenessBreakPoint) {
        grid-column-gap: 0.5rem;
        padding: 1rem 0.5rem 1rem 0.5rem;
      }

      &__process {
        --howToColCount: 4; //Todo: figure out a way to inject this var from angular
        --iconSize: 7rem;
        --stepIndicatorSize: 2rem;
        --stepIndicatorBorderWidth: 0.25rem;

        grid-column: 2;
        display: grid;
        grid-column-gap: 2rem;
        grid-template-columns: repeat(var(--howToColCount), min-content);
        justify-items: center;

        @media (max-width: $responsivenessBreakPoint) {
          --iconSize: 3rem;
          grid-column-gap: 0.5rem;
        }

        &__icon {
          --local-primary: #{$won-primary-color};
          @include fixed-square(var(--iconSize));
          margin-bottom: 1rem;
          cursor: pointer;

          &--selected {
            cursor: default;
          }
        }

        &__stepcount {
          @include fixed-square(var(--stepIndicatorSize));
          text-align: center;
          border-radius: 100%;
          background: $won-secondary-text-color;
          color: $won-primary-color;
          border: var(--stepIndicatorBorderWidth) solid $won-primary-color;
          box-sizing: border-box;
          font-weight: bold;
          cursor: pointer;

          &--selected {
            background: $won-primary-color;
            color: $won-secondary-text-color;
            cursor: default;
          }
        }

        //This snippet is so we can have a horizontal line across the stepcount row
        &__stepline {
          grid-column: 1 / -1;
          height: 0;
          width: 100%;
          box-sizing: border-box;
          /*The calculation below is so we do not display the line on the left side of the first
          element and on the right side of the last element, we achieve this via a padding since our stepline
          stretches across all existing columns anyway.

          How do we do this?
            we know that the all columns are the same size and that the columnwidth itself is the min-width of the column-content (in our case this is the --iconSize)
            since we also know that the content of each column will be centered, we know that the automatically created margin
            of the smaller column can't be bigger than half the size of the largest column width
          */
          padding: 0 calc(var(--iconSize) / 2);

          &:before {
            display: block;
            position: relative;
            width: 100%;
            height: var(--stepIndicatorBorderWidth);

            /*The last thing we have to do is move the line behind the row above directly in the center of the height*/
            top: calc(
              (
                  var(--stepIndicatorSize) -
                    (
                      (
                          var(--stepIndicatorSize) -
                            var(--stepIndicatorBorderWidth)
                        ) / 2
                    )
                ) * -1
            );
            content: "";
            background-color: $won-primary-color;
            z-index: -1;
          }
        }
      }

      &__button {
        margin-top: 1rem;
        cursor: pointer;
        --local-primary: #{$won-primary-color};
        @include fixed-square(2.5rem);

        &--invisible {
          visibility: hidden;
        }

        &--prev {
          grid-column: 1;
          grid-row: 2;
        }

        &--next {
          grid-column: 3;
          grid-row: 2;
          transform: rotate(180deg);
        }
      }

      &__detail {
        text-align: center;
        grid-column: 2;
        grid-row: 2;
        &__title {
          padding-bottom: 0.5rem;
          font-size: $normalFontSize;
          font-weight: bold;
        }
        &__text {
          font-weight: 200;
        }
      }
    }
    .about__howto__createx {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-column-gap: 0.5rem;
      max-width: 30rem;
      padding-top: 1.5rem;
      margin: 0 auto;
      grid-row-gap: 1.5rem;

      &__button {
        @media (min-width: $responsivenessBreakPoint) {
          white-space: nowrap;
        }
      }

      &__button {
        white-space: normal;
      }

      &__spanbutton,
      &__labelledhr {
        grid-column: 1 / -1;
      }
    }
  }

  & > .about__imprint {
    background-color: $won-primary-color;
    .about__imprint__title {
      color: white;
      text-align: center;
      font-size: $bigFontSize;
      padding-bottom: 2rem;
    }

    .about__imprint__text {
      font-size: $normalFontSize;
      color: white;
      text-align: center;

      a {
        text-decoration: none;
        color: white;

        &:hover {
          text-decoration: underline;
        }
      }

      p {
        margin-bottom: 1em;
      }
    }
  }

  & > .about__privacyPolicy {
    background-color: var(--won-secondary-color);
    color: #fff;

    .about__privacyPolicy__title {
      font-size: $bigFontSize;
      text-align: center;
      color: #fff;

      padding-bottom: 2rem;
      font-weight: normal;
    }

    .about__privacyPolicy__text {
      margin: 0 auto;
      max-width: 45rem;
      font-size: $smallFontSize;
      h2 {
        font-size: $normalFontSize;
        margin-top: 2em;
        margin-bottom: 1em;
      }
      a {
        text-decoration: none;
        //color: $won-primary-color;
        &:hover {
          text-decoration: underline;
        }
      }
      p {
        margin-bottom: 1em;
      }
    }
  }

  & > .about__termsOfService {
    background-color: $won-lighter-gray;

    .about__termsOfService__title {
      font-size: $bigFontSize;
      text-align: center;

      padding-bottom: 2rem;
      font-weight: normal;
    }

    .about__termsOfService__text {
      margin: 0 auto;
      max-width: 45rem;
      font-size: $smallFontSize;
      h2 {
        font-size: $normalFontSize;
        margin-top: 2em;
        margin-bottom: 1em;
      }
      a {
        text-decoration: none;
        color: $won-primary-color;
        &:hover {
          text-decoration: underline;
        }
      }
      p {
        margin-bottom: 1em;
      }
    }
  }

  & > .about__faq {
    background-color: $won-lighter-gray;

    .about__faq__title {
      text-align: center;
      font-size: $bigFontSize;
      padding-bottom: 2rem;
    }

    won-accordion.about__faq__questions {
      display: block;
      max-width: 45rem;
      margin: 0 auto;
    }
  }
}
