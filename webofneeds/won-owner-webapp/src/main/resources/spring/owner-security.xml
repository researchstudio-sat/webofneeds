<?xml version="1.0" encoding="UTF-8" ?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:benas="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
								 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<http pattern="/favicon.ico" security="none"/>
	<http pattern="/app" security="none"/>
	<http pattern="/bower_components" security="none"/>
	<http pattern="/fonts" security="none"/>
	<http pattern="/images" security="none"/>
	<http pattern="/old" security="none"/>
	<http pattern="/scripts" security="none"/>
	<http pattern="/style" security="none"/>
	<http auto-config="true" use-expressions="true" entry-point-ref="ajaxLoginUrlAuthenticationEntryPoint">
        <intercept-url pattern="/msg" access="isAnonymous()"/>
        <intercept-url pattern="/rest/users/" access="isAnonymous()"/>
        <intercept-url pattern="/rest/users/private" access="isAnonymous()"/>
        <intercept-url pattern="/rest/users/ping/" access="permitAll()"/>
		<intercept-url pattern="/rest/users/signout" access="isAuthenticated()"/>
        <intercept-url pattern="/rest/users/isSignedIn" access="permitAll()"/>
        <intercept-url pattern="/rest/users/isSignedInRole" access="permitAll()"/>
        <intercept-url pattern="/rest/users/signin" access="isAnonymous()"/>
        <intercept-url pattern="/rest/users/email" access="isAuthenticated()"/>
        <intercept-url pattern="/rest/users/settings" access="isAuthenticated()"/>
        <intercept-url pattern="/rest/needs/drafts/*" access="hasRole('ROLE_ACCOUNT')"/>
        <intercept-url pattern="/rest/linked-data/**" access="isAuthenticated()"/>
        <intercept-url pattern="/rest/**" access="isAuthenticated()"/>
        <intercept-url pattern="/**"  requires-channel="https"/>
		<!--intercept-url pattern="/rest/**" access="isAuthenticated()" /-->
        <!--
            added for integrating spring-session, which we added to synchronize
            http sessions with websocket sessions.
            see: http://spring.io/blog/2014/09/16/preview-spring-security-websocket-support-sessions
        -->
        <custom-filter ref="sessionRepositoryFilter" before="FIRST" />
	</http>


	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<beans:bean name="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="wonUserDetailService"/>
		<benas:property name="passwordEncoder" ref="encoder"/>
	</beans:bean>

	<beans:bean name="ajaxLoginUrlAuthenticationEntryPoint" class="won.owner.security.AjaxLoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg value="/"/>
	</beans:bean>

    <beans:bean name="sessionRepository" class="org.springframework.session.MapSessionRepository" />

    <beans:bean name="sessionRepositoryFilter" class="org.springframework.session.web.http.SessionRepositoryFilter">
        <beans:constructor-arg ref="sessionRepository"/>
    </beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider"/>
	</authentication-manager>
</beans:beans>