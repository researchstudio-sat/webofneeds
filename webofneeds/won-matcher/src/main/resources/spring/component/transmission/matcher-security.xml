<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <!-- REST stuff

    <context:component-scan base-package="won.protocol.rest">
        <context:include-filter type="regex" expression="won.protocol.rest.*"/>
    </context:component-scan>-->
    <context:property-placeholder location="file:${WON_CONFIG_DIR}/matcher.properties" ignore-unresolvable="true"/>

    <!--bean id="matcherProtocolCommunicationService"
    class="won.matcher.protocol.impl.MatcherProtocolCommunicationServiceImpl">
        <property name="activeMQService" ref="matcherActiveMQService"/>
        <property name="matcherProtocolCamelConfigurator" ref="matcherProtocolCamelConfigurator"/>
        <property name="componentName" value="activemq"></property>
    </bean-->
    <bean id="keyStoreService" class="won.cryptography.service.KeyStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${keystore.location}" />
        <constructor-arg type="java.lang.String" value="${keystore.password}" />
        <property name="defaultAlias" value="${matcher.uri}" />
    </bean>
    <bean id="trustStoreService" class="won.cryptography.service.TrustStoreService" init-method="init">
        <constructor-arg type="java.lang.String" value="${truststore.location}" />
        <constructor-arg type="java.lang.String" value="${truststore.password}" />
    </bean>
    <!--bean id="matcherCertificateOnStartupCreator"
          class="won.matcher.service.MatcherCertificateOnStartupCreatorDepr">
        <property name="cryptographyService" ref="cryptographyService" />
    </bean-->
    <bean id="cryptographyService" factory-bean="wonTransmissionService" factory-method="getClientCryptographyService">
    </bean>

    <bean id="wonTransmissionService" class="won.cryptography.service.DefaultSecurityWonTransmissionService">
        <!-- no server config for matcher -->
        <!--property name="serverKeyStoreService" ref="serverKeyStoreService" /-->
        <property name="trustStoreService" ref="trustStoreService" />
        <property name="clientKeyStoreService" ref="keyStoreService" />
        <property name="registrationQuery" value="?register=node"></property>
    </bean>

    <!-- TODO all the communication related services should be configured with wonSecurityConfig, this config/factory should have getters for all of them -->
    <!-- TODO take registrationQuery value from properties file -->
    <!--bean id="registrationClient" class="won.cryptography.service.RegistrationClient">

        <property name="registrationQuery" value="?register=node"></property>
        <property name="transmissionConfig" ref="wonSecurityConfig" />
    </bean>
    <bean id="matcherProtocolCommunicationService"
          class="won.matcher.protocol.impl.MatcherProtocolSecureCommunicationServiceImpl">
        <property name="activeMQService" ref="matcherActiveMQService"/>
        <property name="matcherProtocolCamelConfigurator" ref="matcherProtocolCamelConfigurator"/>
        <property name="componentName" value="activemq"></property>
        <property name="transmissionConfig" ref="wonSecurityConfig" />
        <property name="registrationClient" ref="registrationClient" />
    </bean-->


    <!-- TODO can be moved to messaging config -->
    <bean id="registrationClient" factory-bean="wonTransmissionService" factory-method="getRegistrationClient">
    </bean>

</beans>