version: "2"
services:
  # create self-signed server certificate for owner and wonnode 1
  gencert1:
    build: ../../image/gencert
    image: webofneeds/gencert:int
    environment:
      - "CN=satvm05.researchstudio.at"
      - "PASS=pass:$won_certificate_passwd"
    volumes:
      - $base_folder/won-server-certs1:/usr/local/certs/out/

  # portsgres atom databases for owner and wonnode 1
  postgres1:
    restart: always
    image: webofneeds/postgres:int
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgres1/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  # wonnode 1 => https://satvm05.researchstudio.at:8888/won 
  wonnode1:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:int
    environment:
      - "uri.host=satvm05.researchstudio.at"
      - "http.port=8888"
      - "uri.prefix=https://satvm05.researchstudio.at:8888/won"
      - "client.authentication.behind.proxy=false"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm05.researchstudio.at:5432/won_node"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "activemq.broker.port=61616"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62916,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9016 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9016
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8888:8443"
      - "61616:61616"
      - "62916:62916"
      - "9016:9016"
    volumes:
      - $base_folder/won-server-certs1:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/wonnode1:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgres1
      - gencert1

  # owner 1 => https://satvm05.researchstudio.at:8081/owner
  owner1:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:int
    environment:
      - "node.default.host=satvm05.researchstudio.at"
      - "uri.host=satvm05.researchstudio.at"
      - "http.port=8081"
      - "node.default.http.port=8888"
      - "uri.prefix=https://satvm05.researchstudio.at:8888"
      - "uri.prefix.node.default=https://satvm05.researchstudio.at:8888/won"      
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm05.researchstudio.at:5432/won_owner"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "email.from.won.user=$MAIL_USER"
      - "email.from.won.password=$MAIL_PASS"
      - "email.from.won.smtp.host=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62917,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9017 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9017
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8081:8443"
      - "62917:62917"
      - "9017:9017"
    volumes:
      - $base_folder/won-server-certs1:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/owner1:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnode1
      - postgres1
      - gencert1

  # create self-signed server certificate for for owner and wonnode 2
  gencert2:
    restart: always
    build: ../../image/gencert
    image: webofneeds/gencert:int
    environment:
      - "CN=satvm05.researchstudio.at"
      - "PASS=pass:$won_certificate_passwd"
    volumes:
      - $base_folder/won-server-certs2:/usr/local/certs/out/

  # nginx proxy server for owner and wonnode 2
  nginx:
    restart: always
    image: nginx
    ports:
      - "80:80"
      - "443:443"
      - "61617:61617"
    volumes:
      - $base_folder/nginx-int.conf:/etc/nginx/nginx.conf
      - $base_folder/won-server-certs2:/etc/nginx/won-server-certs/
    depends_on:
      - gencert2

  # portsgres atom databases for owner and wonnode 2
  postgres2:
    restart: always
    image: webofneeds/postgres:int
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgres2/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"

  # wonnode 2 (proxied by nginx) => https://satvm05.researchstudio.at/won
  wonnode2:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:int
    environment:
      - "uri.host=satvm05.researchstudio.at"
      - "http.port=8889"
      - "uri.prefix=https://satvm05.researchstudio.at/won"
      - "client.authentication.behind.proxy=true"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm05.researchstudio.at:5433/won_node"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "activemq.broker.port=61617"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62918,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9018 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9018
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8889:8443"
      - "61618:61617"
      - "62918:62918"
      - "9018:9018"
    volumes:
      - $base_folder/won-server-certs2:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/wonnode2:/usr/local/tomcat/won/client-certs/
    depends_on:
      - nginx
      - postgres2
      - gencert2

    # owner 2 (proxied by nginx) => https://satvm05.researchstudio.at/owner
  owner2:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:int
    environment:
      - "node.default.host=satvm05.researchstudio.at"
      - "uri.host=satvm05.researchstudio.at"
      - "http.port=8082"
      - "node.default.http.port=443"
      - "uri.prefix=https://satvm05.researchstudio.at"
      - "uri.prefix.node.default=https://satvm05.researchstudio.at/won"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm05.researchstudio.at:5433/won_owner"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "email.from.won.user=$MAIL_USER"
      - "email.from.won.password=$MAIL_PASS"
      - "email.from.won.smtp.host=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62919,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9019 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9019
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8082:8443"
      - "62919:62919"
      - "9019:9019"
    volumes:
      - $base_folder/won-server-certs2:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/owner2:/usr/local/tomcat/won/client-certs/
    depends_on:
      - nginx
      - wonnode2
      - postgres2
      - gencert2

  # mongodb for persistent debug bot
  mongodb:
    restart: always
    image: tutum/mongodb:3.2
    environment:
      - "MONGODB_USER=won"
      - "MONGODB_DATABASE=int_bot"
      - "MONGODB_PASS=$mongo_db_passwd"
    ports:
      - "27018:27017"
      - "28018:28017"
    volumes:
      - $base_folder/mongodb/data/db:/data/db

  # debug bot used to test atom communication, connect to wonnodes 1 and 2
  debug_bot:
    restart: always
    build: ../../image/bots
    image: webofneeds/bots:int
    environment:
      - "node.default.host=satvm05.researchstudio.at"
      - "node.default.http.port=8888"
      - "uri.prefix.owner=https://satvm05.researchstudio.at/debug_bot" # set this for the trust store alias
      - "won.node.uris=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=$mongo_db_passwd"
      - "botContext.mongodb.host=satvm05.researchstudio.at"
      - "botContext.mongodb.port=27018"
      - "botContext.mongodb.database=int_bot"
    depends_on:
      - mongodb
      - wonnode1
      - wonnode2

  hokify_bot:
    restart: always
    build: ../../image/bots
    image: webofneeds/bots:int
    environment:
      - "MAIN_BOT=won.bot.app.HokifyJobBotApp"
      - "node.default.host=satvm05.researchstudio.at"
      - "node.default.http.port=8888"
      - "uri.prefix.owner=https://satvm05.researchstudio.at/hokify_bot" # set this for the trust store alias
      - "won.node.uris=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
      - "hokifyjobbot.botname = Hokify Bot"
      - "hokifyjobbot.jsonURL = https://hokify.at/jobfeed-webofneeds.json/"
      - "hokifyjobbot.geoURL = https://nominatim.openstreetmap.org/search"
      - "hokifyjobbot.updateTime = 60"
      - "hokifyjobbot.publishTime = 10"
      - "hokifyjobbot.createAllInOne = false"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=$mongo_db_passwd"
      - "botContext.mongodb.host=satvm05.researchstudio.at"
      - "botContext.mongodb.port=27018"
      - "botContext.mongodb.database=int_bot"
    depends_on:
      - mongodb
      - wonnode1
      - wonnode2

  mail_bot:
    restart: always
    build: ../../image/bots
    image: webofneeds/bots:int
    environment:
      - "MAIN_BOT=won.bot.app.Mail2WonBotApp"
      - "node.default.host=satvm05.researchstudio.at"
      - "node.default.http.port=8888"
      - "uri.prefix.owner=https://satvm05.researchstudio.at/mail_bot" # set this for the trust store alias
      - "won.node.uris=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=$mongo_db_passwd"
      - "botContext.mongodb.host=satvm05.researchstudio.at"
      - "botContext.mongodb.port=27018"
      - "botContext.mongodb.database=int_bot"
      - "mailbot.email.user=won-internal"
      - "mailbot.email.address=won-internal@researchstudio.at"
      - "mailbot.email.name=Web of Needs Integration-Test Mail Bot"
      - "mailbot.email.password=$mailinglist_passwd"
      - "mailbot.email.imap.host=imap.researchstudio.at"
      - "mailbot.email.imap.port=993"
      - "mailbot.email.smtp.host=smtp.researchstudio.at"
      - "mailbot.email.smtp.port=587"
    depends_on:
      - mongodb
      - wonnode1
      - wonnode2

  # bigdata rdf store for matcher service (this image is not built at deployment, it is downloaded from dockerhub)
  bigdata:
    restart: always
    build: ../../image/bigdata
    volumes:
      - $base_folder/bigdata/data/:/usr/src/bigdata/data
    ports:
      - "9999:9999"

  # matcher service connect with wonnodes 1 and 2
  matcher_service:
    restart: always
    build: ../../image/matcher-service
    image: webofneeds/matcher_service:int
    environment:
      - "node.host=satvm05.researchstudio.at"
      - "matcher.uri=https://satvm05.researchstudio.at/matcher_service" # set this for the trust store alias
      - "cluster.seedNodes=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2552"
      - "uri.sparql.endpoint=http://satvm05.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "wonNodeController.wonNode.crawl=https://satvm05.researchstudio.at:8888/won/resource,https://satvm05.researchstudio.at/won/resource"
      - "cluster.local.port=2551"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62920,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9020 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9020
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2551:2551"
      - "62920:62920"
      - "9020:9020"
    volumes:
      - $base_folder/won-client-certs/matcher_service:/usr/src/matcher-service/client-certs/
    depends_on:
      - bigdata
      - wonnode1
      - wonnode2

  matcher_sparql:
    restart: always
    build: ../../image/matcher-sparql
    image: webofneeds/matcher_sparql:int
    environment:
      - "node.host=satvm05.researchstudio.at"
      - "cluster.seedNodes=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2552"
      - "cluster.local.port=2554"
      - "matcher.sparql.uri.sparql.endpoint=http://satvm05.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "matcher.sparql.uri.public=http://satvm05.researchstudio.at/sparql/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62923,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9023 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9023
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2554:2554"
      - "9023:9023"
      - "62923:62923"
    depends_on:
      - matcher_service
    volumes:
      - $base_folder/won-client-certs/matcher_sparql:/usr/src/matcher-sparql/client-certs/

  # solr server as an atom index
  solr:
    restart: always
    build: ../../image/solr
    image: webofneeds/solr:int
    volumes:
      - $base_folder/solr/won/data:/opt/solr/server/solr/won/data
      - $base_folder/solr/wontest/data:/opt/solr/server/solr/wontest/data
    ports:
      - "8983:8983"

  # solr matcher and connect to matcher service
  matcher_solr:
    restart: always
    build: ../../image/matcher-solr
    image: webofneeds/matcher_solr:int
    environment:
      - "node.host=satvm05.researchstudio.at"
      - "cluster.seedNodes=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2552"
      - "cluster.local.port=2552"
      - "matcher.solr.uri.solr.server=http://satvm05.researchstudio.at:8983/solr/"
      - "matcher.solr.uri.solr.server.public=http://satvm05.researchstudio.at:8983/solr/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62921,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9021 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9021
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2552:2552"
      - "9021:9021"
      - "62921:62921"
    depends_on:
      - solr
      - matcher_service

  # rescal matcher and connect to matcher service
  matcher_rescal:
    restart: always
    build: ../../image/matcher-rescal
    image: webofneeds/matcher_rescal:int
    environment:
      - "node.host=satvm05.researchstudio.at"
      - "cluster.seedNodes=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2553"
      - "cluster.local.port=2553"
      - "matcher.rescal.uri.public=http://satvm05.researchstudio.at/rescal/"
      - "matcher.rescal.uri.sparql.endpoint=http://satvm05.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "matcher.rescal.executionDurationMinutes=5"
      - "matcher.rescal.threshold=0.15"
      - "matcher.rescal.rank=10"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62922,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9022 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9022
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2553:2553"
      - "9022:9022"
      - "62922:62922"
    volumes:
      - $base_folder/agent:/opt/agent/
    depends_on:
      - matcher_service
