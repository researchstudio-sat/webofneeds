version: "3"
services:
  # create self-signed server certificate for $deploy_host
  gencert:
    build: ../../image/gencert
    #image: webofneeds/gencert:live
    environment:
      - "CN=wonnode"
      - "PASS=pass:changeit"
    volumes:
      - $base_folder/won-server-certs:/usr/local/certs/out/

  # portsgres atom databases for owner and wonnode
  postgres:
    restart: always
    build: ../../image/postgres
    #image: webofneeds/postgres:live
    environment:
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    #volumes:
    #  - $base_folder/postgres/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"

  # wonnode server => access https://$deploy_host:8889/won
  wonnode:
    restart: always
    build: ../../image/wonnode
    #image: webofneeds/wonnode:live
    environment:
      - "uri.host=wonnode"
      - "http.port=8443"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://postgres:5432/won_node"
      - "db.sql.user=won"
      - "db.sql.password=won"
      - "db.ddl.strategy=validate"
      - "CERTIFICATE_PASSWORD=changeit"
      - "activemq.broker.port=61617"
    ports:
      - "8889:8443"
      - "61617:61617"
    volumes:
      - $base_folder/won-server-certs:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/wonnode:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgres

  # mongodb for persistent debug bot
  mongodb:
    restart: always
    image: tutum/mongodb:3.2
    environment:
      - "MONGODB_USER=won"
      - "MONGODB_DATABASE=won"
      - "MONGODB_PASS=won"
    ports:
      - "27017:27017"
      - "28017:28017"
    volumes:
      - $base_folder/mongodb/data/db:/data/db

  # debug bot used to test atom communication
  debug_bot:
    restart: always
    build: ../../image/bots
    #image: webofneeds/bots:live
    environment:
      - "node.default.host=wonnode"
      - "node.default.http.port=8443"
      - "won.node.uris=https://wonnode:8443/won/resource"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=won"
      - "botContext.mongodb.host=mongodb"
      - "botContext.mongodb.port=27017"
      - "botContext.mongodb.database=won"
    depends_on:
      - wonnode
      - mongodb

  # owner application (frontend) => access https://$deploy_host:8082/owner
  owner:
    restart: always
    build: ../../image/owner
    #image: webofneeds/owner:live
    environment:
      - "node.default.host=wonnode"
      - "uri.host=owner"
      - "http.port=8443"
      - "node.default.http.port=8443"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://postgres:5432/won_owner"
      - "db.sql.user=won"
      - "db.sql.password=won"
      - "db.ddl.strategy=validate"
      - "CERTIFICATE_PASSWORD=changeit"
      - "LOGBACK_CONFIG=logback_debug.xml"
    ports:
      - "8082:8443"
    volumes:
      - $base_folder/won-server-certs:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/owner:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnode
      - postgres

  # bigdata rdf store for matcher service
  bigdata:
    restart: always
    build: ../../image/bigdata
    #volumes:
    #  - $base_folder/bigdata/data/:/usr/src/bigdata/data
    ports:
      - "10000:9999"

  # matcher service on connect with wonnode
  matcher_service:
    restart: always
    build: ../../image/matcher-service
    #image: webofneeds/matcher_service:live
    environment:
      - "node.host=wonnode"
      - "cluster.seedNodes=localhost:2561"
      - "uri.sparql.endpoint=http://bigdata:9999/blazegraph/namespace/kb/sparql"
      - "wonNodeController.wonNode.crawl=https://wonnode:8443/won/resource"
      - "cluster.local.port=2561"
    ports:
      - "2561:2561"
    depends_on:
      - bigdata
      - wonnode

  # solr server as an atom index
  solr:
    restart: always
    image: webofneeds/solr:live
    #volumes:
    #  - $base_folder/solr/won/data:/opt/solr/server/solr/won/data
    #  - $base_folder/solr/wontest/data:/opt/solr/server/solr/wontest/data
    ports:
      - "8984:8983"

  # solr matcher and connect to matcher service
  matcher_solr:
    restart: always
    build: ../../image/matcher-solr
    #image: webofneeds/matcher_solr:live
    environment:
      - "node.host=wonnode"
      - "cluster.seedNodes=matcher_service:2561"
      - "cluster.local.port=2562"
      - "matcher.solr.uri.solr.server=http://solr:8983/solr/"
      - "matcher.solr.uri.solr.server.public=http://solr:8983/solr/"
    ports:
      - "2562:2562"
    depends_on:
      - solr
      - matcher_service

  # sparql matcher and connect to matcher service
  matcher_sparql:
    restart: always
    build: ../../image/matcher-sparql
    image: webofneeds/matcher_sparql:int
    environment:
      - "node.host=wonnode"
      - "cluster.seedNodes=matcher_service:2561"
      - "cluster.local.port=2564"
      - "matcher.sparql.uri.sparql.endpoint=http://bigdata:9999/blazegraph/namespace/kb/sparql"
      - "matcher.sparql.uri.public=http://matcher_sparql/sparql/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
    ports:
      - "2564:2564"
    depends_on:
      - matcher_service
    volumes:
      - $base_folder/won-client-certs/matcher_sparql:/usr/src/matcher-sparql/client-certs/
