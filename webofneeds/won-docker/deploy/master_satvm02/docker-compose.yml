version: '2'
services:

  # owner server self-signed certificate for communication with wonnode
  gencertownerblue:
    build: ../../image/gencert
    image: webofneeds/gencert:master
    environment:
      - "CN=ownerblue.master.matchat.org"
      - "PASS=file:/usr/local/certs/out/won_certificate_passwd_file"
      - "OPENSSL_CONFIG_FILE=/usr/local/openssl.conf"
    volumes:
      - $base_folder/won-server-certsownerblue:/usr/local/certs/out/
      - $base_folder/openssl.conf:/usr/local/openssl.conf

  # owner server self-signed certificate for communication with wonnode
  gencertownergreen:
    build: ../../image/gencert
    image: webofneeds/gencert:master
    environment:
      - "CN=ownergreen.master.matchat.org"
      - "PASS=file:/usr/local/certs/out/won_certificate_passwd_file"
      - "OPENSSL_CONFIG_FILE=/usr/local/openssl.conf"
    volumes:
      - $base_folder/won-server-certsownergreen:/usr/local/certs/out/
      - $base_folder/openssl.conf:/usr/local/openssl.conf

  # portsgres atom databases for owner and wonnode blue
  postgresblue:
    restart: always
    image: webofneeds/postgres:master
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgresblue/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  # wonnode blue => https://nodeblue.master.matchat.org/won
  wonnodeblue:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:master
    environment:
      - "uri.host=nodeblue.master.matchat.org"
      - "http.port=8888"
      - "uri.prefix=https://nodeblue.master.matchat.org/won"
      - "client.authentication.behind.proxy=true"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm02.researchstudio.at:5432/won_node"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "activemq.broker.port=61612"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62916,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9016 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9016
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8888:8443"
      - "61622:61612"
      - "62916:62916"
      - "9016:9016"
    volumes:
      - $base_folder/letsencrypt/certs/live/matchat.org/fullchain.pem:/usr/local/tomcat/conf/ssl/t-cert.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/privkey.pem:/usr/local/tomcat/conf/ssl/t-key.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/t-key-cert.pfx:/usr/local/tomcat/conf/ssl/t-key-cert.pfx
      - $base_folder/letsencrypt/certs/live/matchat.org/t-keystore.jks:/usr/local/tomcat/conf/ssl/t-keystore.jks
      - $base_folder/won-client-certs/wonnodeblue:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgresblue

  # owner blue => https://ownerblue.master.matchat.org/owner
  ownerblue:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:master
    environment:
      - "node.default.host=nodeblue.master.matchat.org"
      - "uri.host=ownerblue.master.matchat.org"
      - "http.port=8081"
      - "node.default.http.port=443"
      - "uri.prefix=https://ownerblue.master.matchat.org"
      - "uri.prefix.node.default=https://nodeblue.master.matchat.org/won"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm02.researchstudio.at:5432/won_owner"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "email.from.won.user=$MAIL_USER"
      - "email.from.won.password=$MAIL_PASS"
      - "email.from.won.smtp.host=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62917,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9017 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9017
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8081:8443"
      - "62917:62917"
      - "9017:9017"
    volumes:
      - $base_folder/custom_owner_skin_blue:/usr/local/tomcat/webapps/owner/skin/current/
      - $base_folder/won-server-certsownerblue:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/ownerblue:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnodeblue
      - postgresblue
      - gencertownerblue

  # portsgres atom databases for owner and wonnode green
  postgresgreen:
    restart: always
    image: webofneeds/postgres:master
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgresgreen/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"

  # wonnode green (proxied by nginx) => https://nodegreen.master.matchat.org/won
  wonnodegreen:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:master
    environment:
      - "uri.host=nodegreen.master.matchat.org"
      - "http.port=8889"
      - "uri.prefix=https://nodegreen.master.matchat.org/won"
      - "client.authentication.behind.proxy=true"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm02.researchstudio.at:5433/won_node"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "activemq.broker.port=61611"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62918,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9018 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9018
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8889:8443"
      - "61621:61611"
      - "62918:62918"
      - "9018:9018"
    volumes:
      - $base_folder/letsencrypt/certs/live/matchat.org/fullchain.pem:/usr/local/tomcat/conf/ssl/t-cert.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/privkey.pem:/usr/local/tomcat/conf/ssl/t-key.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/t-key-cert.pfx:/usr/local/tomcat/conf/ssl/t-key-cert.pfx
      - $base_folder/letsencrypt/certs/live/matchat.org/t-keystore.jks:/usr/local/tomcat/conf/ssl/t-keystore.jks
      - $base_folder/won-client-certs/wonnodegreen:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgresgreen

   # owner green (proxied by nginx) => https://ownergreen.master.matchat.org/owner
  ownergreen:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:master
    environment:
      - "node.default.host=nodegreen.master.matchat.org"
      - "uri.host=ownergreen.master.matchat.org"
      - "http.port=8082"
      - "node.default.http.port=443"
      - "uri.prefix=https://ownergreen.master.matchat.org"
      - "uri.prefix.node.default=https://nodegreen.master.matchat.org/won"
      - "db.sql.jdbcDriverClass=org.postgresql.Driver"
      - "db.sql.jdbcUrl=jdbc:postgresql://satvm02.researchstudio.at:5433/won_owner"
      - "db.ddl.strategy=validate"
      - "db.sql.user=won"
      - "db.sql.password=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "email.from.won.user=$MAIL_USER"
      - "email.from.won.password=$MAIL_PASS"
      - "email.from.won.smtp.host=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62919,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9019 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9019
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8082:8443"
      - "62919:62919"
      - "9019:9019"
    volumes:
      - $base_folder/custom_owner_skin_green:/usr/local/tomcat/webapps/owner/skin/current/
      - $base_folder/won-server-certsownergreen:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/ownergreen:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnodegreen
      - postgresgreen
      - gencertownergreen

  # mongodb for persistent debug bot
  mongodb:
    restart: always
    image: tutum/mongodb:3.2
    environment:
      - "MONGODB_USER=won"
      - "MONGODB_DATABASE=master_bot"
      - "MONGODB_PASS=$mongo_db_passwd"
    ports:
      - "27018:27017"
      - "28018:28017"
    volumes:
      - $base_folder/mongodb/data/db:/data/db

  # debug bot used to test atom communication, connect to wonnodes blue and green
  debug_bot:
    restart: always
    build: ../../image/bots
    image: webofneeds/bots:master
    environment:
      - "node.default.host=nodeblue.master.matchat.org"
      - "node.default.http.port=443"
      - "uri.prefix.owner=https://master.matchat.org/debug_bot"  # set this for the trust store alias
      - "won.node.uris=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=$mongo_db_passwd"
      - "botContext.mongodb.host=satvm02.researchstudio.at"
      - "botContext.mongodb.port=27018"
      - "botContext.mongodb.database=master_bot"
    depends_on:
      - mongodb
      - wonnodeblue
      - wonnodegreen

  hokify_bot:
    restart: always
    build: ../../image/bots
    image: webofneeds/bots:int
    environment:
      - "MAIN_BOT=won.bot.app.HokifyJobBotApp"
      - "node.default.host=nodeblue.master.matchat.org"
      - "node.default.http.port=443"
      - "uri.prefix.owner=https://master.matchat.org/hokify_bot"  # set this for the trust store alias
      - "won.node.uris=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
      - "hokifyjobbot.botname = Hokify Bot"
      - "hokifyjobbot.jsonURL = https://hokify.at/jobfeed-webofneeds.json/"
      - "hokifyjobbot.geoURL = https://nominatim.openstreetmap.org/search"
      - "hokifyjobbot.updateTime = 60"
      - "hokifyjobbot.publishTime = 10"
      - "hokifyjobbot.createAllInOne = false"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=$mongo_db_passwd"
      - "botContext.mongodb.host=satvm02.researchstudio.at"
      - "botContext.mongodb.port=27018"
      - "botContext.mongodb.database=master_bot"
    depends_on:
      - mongodb
      - wonnodeblue
      - wonnodegreen

  mail_bot:
    restart: always
    build: ../../image/bots
    image: webofneeds/bots:int
    environment:
      - "MAIN_BOT=won.bot.app.Mail2WonBotApp"
      - "node.default.host=nodeblue.master.matchat.org"
      - "node.default.http.port=443"
      - "uri.prefix.owner=https://master.matchat.org/mail_bot"  # set this for the trust store alias
      - "won.node.uris=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
      - "botContext.impl=mongoBotContext"
      - "botContext.mongodb.user=won"
      - "botContext.mongodb.pass=$mongo_db_passwd"
      - "botContext.mongodb.host=satvm02.researchstudio.at"
      - "botContext.mongodb.port=27018"
      - "botContext.mongodb.database=master_bot"
      - "mailbot.email.user=won-internal"
      - "mailbot.email.address=won-internal@researchstudio.at"
      - "mailbot.email.name=Web of Needs Master Mail Bot"
      - "mailbot.email.password=$mailinglist_passwd"
      - "mailbot.email.imap.host=imap.researchstudio.at"
      - "mailbot.email.imap.port=993"
      - "mailbot.email.smtp.host=smtp.researchstudio.at"
      - "mailbot.email.smtp.port=587"
    depends_on:
      - mongodb
      - wonnodeblue
      - wonnodegreen

  # bigdata rdf store for matcher service (this image is not built at deployment, it is downloaded from dockerhub)
  bigdata:
    restart: always
    build: ../../image/bigdata
    volumes:
      - $base_folder/bigdata/data/:/usr/src/bigdata/data
    ports:
      - "9999:9999"

  # matcher service connect with wonnodes 1 and 2
  matcher_service:
    restart: always
    build: ../../image/matcher-service
    image: webofneeds/matcher_service:master
    environment:
      - "node.host=satvm02.researchstudio.at"
      - "matcher.uri=https://master.matchat.org/matcher_service" # set this for the trust store alias
      - "cluster.seedNodes=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2552"
      - "uri.sparql.endpoint=http://satvm02.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "wonNodeController.wonNode.crawl=https://nodeblue.master.matchat.org/won/resource,https://nodegreen.master.matchat.org/won/resource"
      - "cluster.local.port=2551"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62920,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9020 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9020
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "2551:2551"
      - "62920:62920"
      - "9020:9020"
    volumes:
      - $base_folder/won-client-certs/matcher_service:/usr/src/matcher-service/client-certs/
    depends_on:
      - bigdata
      - wonnodeblue
      - wonnodegreen

  # solr server as an atom index
  solr:
    restart: always
    build: ../../image/solr
    image: webofneeds/solr:master
    volumes:
      - $base_folder/solr/won/data:/opt/solr/server/solr/won/data
      - $base_folder/solr/wontest/data:/opt/solr/server/solr/wontest/data
    ports:
      - "8983:8983"

  # solr matcher and connect to matcher service
  matcher_solr:
    restart: always
    build: ../../image/matcher-solr
    image: webofneeds/matcher_solr:master
    environment:
      - "node.host=satvm02.researchstudio.at"
      - "cluster.seedNodes=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2552"
      - "cluster.local.port=2552"
      - "matcher.solr.uri.solr.server=http://satvm02.researchstudio.at:8983/solr/"
      - "matcher.solr.uri.solr.server.public=http://satvm02.researchstudio.at:8983/solr/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62921,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9021 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9021
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "2552:2552"
      - "9021:9021"
      - "62921:62921"
    depends_on:
      - solr
      - matcher_service

  # rescal matcher and connect to matcher service
  matcher_rescal:
    restart: always
    build: ../../image/matcher-rescal
    image: webofneeds/matcher_rescal:master
    environment:
      - "node.host=satvm02.researchstudio.at"
      - "cluster.seedNodes=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2553"
      - "cluster.local.port=2553"
      - "matcher.rescal.uri.public=http://satvm02.researchstudio.at/rescal/"
      - "matcher.rescal.uri.sparql.endpoint=http://satvm02.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "matcher.rescal.executionDurationMinutes=5"
      - "matcher.rescal.threshold=0.15"
      - "matcher.rescal.rank=10"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62922,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9022 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9022
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "2553:2553"
      - "9022:9022"
      - "62922:62922"
    volumes:
      - $base_folder/agent:/opt/agent/
    depends_on:
      - matcher_service


  matcher_sparql:
    restart: always
    build: ../../image/matcher-sparql
    image: webofneeds/matcher_sparql:int
    environment:
    - "node.host=satvm02.researchstudio.at"
    - "cluster.seedNodes=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2553"
    - "cluster.local.port=2554"
    - "matcher.sparql.uri.sparql.endpoint=http://satvm02.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
    - "matcher.sparql.uri.public=http://satvm02.researchstudio.at/sparql/"
    - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
    - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=62923,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9023 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9023
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
    - "2554:2554"
    - "9023:9023"
    - "62923:62923"
    depends_on:
    - matcher_service
    volumes:
    - $base_folder/won-client-certs/matcher_sparql:/usr/src/matcher-sparql/client-certs/