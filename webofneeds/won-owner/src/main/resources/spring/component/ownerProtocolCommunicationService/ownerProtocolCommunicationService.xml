<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:context="http://www.springframework.org/schema/context"        xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd         http://www.springframework.org/schema/context         http://www.springframework.org/schema/context/spring-context-4.1.xsd">


    <bean id="messagingService" class="won.protocol.jms.MessagingServiceImpl">
        <!-- expects to find a bean named "producerTemplate", which is exposed through camel -->
        <property name="producerTemplate" ref="producerTemplate"/>
    </bean>

    <bean id="ownerProtocolCamelConfigurator" class="won.owner.messaging.OwnerProtocolCamelConfiguratorImpl" >
       <property name="startingComponent" value="seda:"/>
        <property name="componentName" value="activemq"/>
        <property name="defaultNodeURI"  value="${uri.node.default}"/>
        <property name="messagingContext" ref="messagingContext"/>
    </bean>

    <bean id="ownerActiveMQService" class="won.protocol.jms.ActiveMQServiceImpl">
        <constructor-arg name="type" value="OwnerProtocol"/>
    </bean>

    <bean id="brokerComponentFactory" class="won.protocol.jms.BrokerComponentFactory"/>

    <bean id="ownerProtocolCommunicationService" class="won.owner.messaging.OwnerProtocolCommunicationServiceImpl">
       <property name="activeMQService" ref="ownerActiveMQService"/>
        <!--TODO chicken-egg - use only registration client here... -->
        <property name="registrationClient" ref="registrationClient" />
        <property name="cryptographyService" ref="cryptographyService" />
    </bean>

    <bean id="ownerProtocolAtomServiceClientJMSBased" class="won.owner.messaging.OwnerWonMessageSenderJMSBased">
        <property name="messagingService" ref="messagingService"/>
        <property name="defaultNodeURI" value="${uri.node.default}"/>
        <property name="startingEndpoint" value="seda:outgoingMessages"/>
        <!--property name="ownerAlias" value="${uri.prefix.owner}" /-->
        <!--property name="ownerProtocolActiveMQService" ref="activeMQService"/-->
        <qualifier value="default" />
    </bean>


</beans>