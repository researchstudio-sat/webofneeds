<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd


                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd

                http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- messaging beans -->
    <camel:camelContext id="wonOwnerCamel">
        <camel:packageScan>
            <camel:package>won.owner.camel.routes.fixed</camel:package>
        </camel:packageScan>
        <camel:template id="producerTemplate" defaultEndpoint="direct:OUTMSG1"/>
        <camel:endpoint id="outgoingMessages" uri="seda:OUTMSG"/>
        <camel:endpoint id="atomMessageQueue" uri="activemq:WON.MSG" pattern="InOut"></camel:endpoint>
    </camel:camelContext>


    <!-- Activate Annotation based configuration -->
    <context:annotation-config/>

    <!-- Defines where to search for annotated components -->
    <context:component-scan base-package="won.protocol.exception"/>
    <context:component-scan base-package="won.protocol.matcher"/>
    <context:component-scan base-package="won.protocol.model"/>
    <context:component-scan base-package="won.protocol.atom"/>
    <context:component-scan base-package="won.protocol.owner"/>
    <context:component-scan base-package="won.protocol.repository"/>
    <context:component-scan base-package="won.protocol.service"/>
    <context:component-scan base-package="won.protocol.util"/>

    <!-- won-specific processors -->
    <!-- start of the pipeline -->
    <bean name="wonMessageIntoCamelProcessor"
          class="won.protocol.message.processor.camel.WonMessageIntoCamelProcessor"/>

    <!-- processor for checking well-formedness of messages -->
    <bean name="wellformednessChecker" class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg>
            <bean class="won.protocol.message.processor.impl.WellformednessCheckingWonMessageProcessor"/>
        </constructor-arg>
    </bean>
    <!-- uri related well-formedness of messages -->
    <bean name="uriNodePathChecker" class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg>
            <bean class="won.protocol.message.processor.impl.UriConsistencyCheckingWonMessageProcessor"/>
        </constructor-arg>
    </bean>
    <!-- processor for checking signatures -->
    <bean name="signatureChecker" class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg>
            <bean class="won.protocol.message.processor.impl.SignatureCheckingWonMessageProcessor"/>
        </constructor-arg>
    </bean>

    <bean id="keyPairAliasDerivationStrategy" factory-bean="keyPairAliasDerivationStrategyFactory" factory-method="create" />

    <!-- processor for signing messages -->
    <bean id="signatureAddingProcessor" class="won.protocol.message.processor.impl.SignatureAddingWonMessageProcessor">
        <property name="cryptographyService" ref="CryptographyServiceOnBehalfOfAtom"/>
        <property name="keyPairAliasDerivationStrategy" ref="keyPairAliasDerivationStrategy" />
    </bean>
    <bean name="signatureAdder" class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg ref="signatureAddingProcessor"/>
    </bean>
    <!-- processor for generating and adding keys for just created atoms -->
    <bean name="atomKeyGeneratorAndAdder" class="won.protocol.message.processor.impl.KeyForNewAtomAddingProcessor">
        <property name="cryptographyService" ref="CryptographyServiceOnBehalfOfAtom"/>
        <property name="keyPairAliasDerivationStrategy" ref="keyPairAliasDerivationStrategy" />
    </bean>

    <!-- necessary when linked data source is a caching data source -->
    <bean name="linkedDataCacheInvalidator"
          class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg ref="ldCacheInvalidatingProcessor"/>
    </bean>
    <bean name="ldCacheInvalidatingProcessor"
          class="won.owner.protocol.message.LinkedDataCacheInvalidator">
        <!--property name="wonUserDetailService" ref="wonUserDetailService" /-->
        <property name="linkedDataSource" ref="linkedDataSource"/>
        <property name="linkedDataSourceOnBehalfOfAtom" ref="linkedDataSourceOnBehalfOfAtom" />
    </bean>
     <!-- necessary when linked data source is a caching data source -->
    <bean name="linkedDataCacheUpdater"
          class="won.protocol.message.processor.camel.WonMessageProcessorCamelAdapter">
        <constructor-arg ref="ldCacheUpdatingProcessor"/>
    </bean>
    <bean name="ldCacheUpdatingProcessor"
          class="won.owner.protocol.message.LinkedDataCacheUpdater">
        <property name="linkedDataSourceOnBehalfOfAtom" ref="linkedDataSourceOnBehalfOfAtom" />
    </bean>

</beans>